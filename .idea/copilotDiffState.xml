<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/secure-comm/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/secure-comm/build.gradle.kts" />
              <option name="originalContent" value="// ==== GENESIS PROTOCOL - SECURE COMMUNICATION MODULE ====&#10;// Security module using convention plugins&#10;&#10;plugins {&#10;    id(&quot;genesis.android.library&quot;)&#10;    id(&quot;genesis.android.native&quot;)&#10;    id(&quot;genesis.android.hilt&quot;)&#10;}&#10;&#10;android {&#10;    namespace = &quot;dev.aurakai.auraframefx.securecomm&quot;&#10;    externalNativeBuild {&#10;        cmake {&#10;            path = file(&quot;src/main/cpp/CMakeLists.txt&quot;)&#10;            version = &quot;3.22.1&quot;&#10;        }&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(project(&quot;:core-module&quot;))&#10;    implementation(libs.hilt.android)&#10;    implementation(libs.hilt.work)&#10;    implementation(libs.androidx.work.runtime.ktx)&#10;    implementation(libs.kotlinx.serialization.json)&#10;    implementation(libs.bundles.coroutines)&#10;    implementation(libs.bundles.network)&#10;    implementation(platform(libs.firebase.bom))&#10;    implementation(libs.bundles.firebase)&#10;    implementation(libs.timber)&#10;    implementation(libs.coil.compose)&#10;    implementation(libs.mockk.agent)&#10;    &#10;    // Security - BouncyCastle for cryptography&#10;    implementation(libs.bcprov.jdk18on)&#10;    &#10;    // Add other module-specific dependencies here&#10;    implementation(kotlin(&quot;stdlib-jdk8&quot;))&#10;    &#10;    // Test dependencies&#10;    testImplementation(libs.junit4)&#10;    testImplementation(libs.junit.jupiter.api)&#10;    testImplementation(libs.junit.jupiter.engine)&#10;    testImplementation(libs.mockk.android)&#10;    testImplementation(libs.kotlinx.coroutines.test)&#10;    androidTestImplementation(libs.androidx.test.ext.junit)&#10;    androidTestImplementation(libs.androidx.test.espresso.core)&#10;    androidTestImplementation(libs.hilt.android.testing)&#10;}&#10;" />
              <option name="updatedContent" value="// ==== GENESIS PROTOCOL - SECURE COMMUNICATION MODULE ====&#10;// Security module using convention plugins&#10;&#10;plugins {&#10;    id(&quot;genesis.android.library&quot;)&#10;    id(&quot;genesis.android.native&quot;)&#10;    id(&quot;genesis.android.hilt&quot;)&#10;}&#10;&#10;android {&#10;    namespace = &quot;dev.aurakai.auraframefx.securecomm&quot;&#10;    externalNativeBuild {&#10;        cmake {&#10;            path = file(&quot;src/main/cpp/CMakeLists.txt&quot;)&#10;            version = &quot;3.22.1&quot;&#10;        }&#10;    }&#10;}&#10;&#10;dependencies {&#10;    implementation(project(&quot;:core-module&quot;))&#10;    implementation(libs.hilt.android)&#10;    implementation(libs.hilt.work)&#10;    implementation(libs.androidx.work.runtime.ktx)&#10;    implementation(libs.kotlinx.serialization.json)&#10;    implementation(libs.bundles.coroutines)&#10;    implementation(libs.bundles.network)&#10;    implementation(platform(libs.firebase.bom))&#10;    implementation(libs.bundles.firebase)&#10;    implementation(libs.timber)&#10;    implementation(libs.coil.compose)&#10;    implementation(libs.mockk.agent)&#10;    &#10;    // Security - BouncyCastle for cryptography&#10;    implementation(libs.bcprov.jdk18on)&#10;    &#10;    // Add other module-specific dependencies here&#10;    implementation(kotlin(&quot;stdlib-jdk8&quot;))&#10;    &#10;    // Test dependencies&#10;    testImplementation(libs.junit4)&#10;    testImplementation(libs.junit.jupiter.api)&#10;    testImplementation(libs.junit.jupiter.engine)&#10;    testImplementation(libs.mockk.android)&#10;    testImplementation(libs.kotlinx.coroutines.test)&#10;    androidTestImplementation(libs.androidx.test.ext.junit)&#10;    androidTestImplementation(libs.androidx.test.espresso.core)&#10;    androidTestImplementation(libs.hilt.android.testing)&#10;    androidTestImplementation(&quot;androidx.test:runner:1.5.2&quot;)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>