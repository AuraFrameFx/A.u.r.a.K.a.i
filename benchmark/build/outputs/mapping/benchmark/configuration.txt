# The proguard configuration file for the following section is C:\ReGenesis-A.O.S.P\benchmark\build\intermediates\aapt_proguard_file\benchmark\generateBenchmarkLibraryProguardRules\aapt_rules.txt
# Generated by the gradle plugin

# End of content from C:\ReGenesis-A.O.S.P\benchmark\build\intermediates\aapt_proguard_file\benchmark\generateBenchmarkLibraryProguardRules\aapt_rules.txt
# The proguard configuration file for the following section is C:\ReGenesis-A.O.S.P\benchmark\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-9.0.0-alpha02
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
-allowaccessmodification

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from C:\ReGenesis-A.O.S.P\benchmark\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-9.0.0-alpha02
# The proguard configuration file for the following section is C:\ReGenesis-A.O.S.P\benchmark\benchmark-rules.pro
# Benchmark specific ProGuard/R8 rules
# Keep all benchmark related classes and methods
-keepclassmembers class * {
    @androidx.benchmark.** *;
    @org.junit.** *;
}

# Keep test classes
-keep class * extends junit.framework.TestCase { *; }

# Keep test classes with JUnit 4 annotations
-keep @org.junit.runner.RunWith class *
-keepclassmembers @org.junit.runner.RunWith class * { *; }

# Keep AndroidX Benchmark classes
-keep class androidx.benchmark.** { *; }

# Keep test support classes
-keep class androidx.test.** { *; }
-keep class org.hamcrest.** { *; }

# Keep the @Rule fields that are used in tests
-keepclassmembers class * {
    @org.junit.Rule *;
    @org.junit.Before *;
    @org.junit.After *;
    @org.junit.Test *;
}

# Keep Kotlin metadata for reflection
-keepclassmembers class **.R$* {
    public static <fields>;
}

# Keep the custom benchmark runner if any
-keep public class * extends androidx.benchmark.junit4.AndroidBenchmarkRunner { *; }
-keep public class * extends androidx.test.runner.AndroidJUnitRunner { *; }

# Keep the application class referenced in the manifest
-keep public class * extends android.app.Application
-keep public class * extends android.app.Instrumentation

# Keep test infrastructure
-keepclassmembers class * {
    @androidx.test.filters.SmallTest *;
    @androidx.test.filters.MediumTest *;
    @androidx.test.filters.LargeTest *;
}

# Keep all test classes in the benchmark package
-keep class dev.aurakai.auraframefx.benchmark.** { *; }

# End of content from C:\ReGenesis-A.O.S.P\benchmark\benchmark-rules.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\38b6e5238a8ac4094a2329fd93faeb50\workspace\transformed\jetified-hilt-work-1.2.0\proguard.txt
# Keep class names of Hilt injected Workers since their name are used as a multibinding map key.
-keepnames @androidx.hilt.work.HiltWorker class * extends androidx.work.ListenableWorker
# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\38b6e5238a8ac4094a2329fd93faeb50\workspace\transformed\jetified-hilt-work-1.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\d2f140e418135e289684982a052515ac\workspace\transformed\jetified-hilt-android-2.51.1\proguard.txt
# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.EntryPoint class *# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.android.EarlyEntryPoint class *# Keep for the reflective cast done in EntryPoints.
# See b/183070411#comment4 for more info.
-keep,allowobfuscation,allowshrinking @dagger.hilt.internal.ComponentEntryPoint class *
-keep,allowobfuscation,allowshrinking @dagger.hilt.internal.GeneratedEntryPoint class *
# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\d2f140e418135e289684982a052515ac\workspace\transformed\jetified-hilt-android-2.51.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\299810d132c978da8c05ea48cf8244a2\workspace\transformed\jetified-navigation-common-release\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NavArgsLazy creates NavArgs instances using reflection
-if public class ** implements androidx.navigation.NavArgs
-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

# Retain the @Navigator.Name annotation on each subclass of Navigator.
# R8 full mode only retains annotations on items matched by a -keep rule,
# hence the extra -keep rule for the subclasses of Navigator.
#
# A -keep rule for the Navigator.Name annotation class is not required
# since the annotation is referenced from the code.
-keepattributes RuntimeVisibleAnnotations
-keep,allowobfuscation,allowshrinking class * extends androidx.navigation.Navigator

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\299810d132c978da8c05ea48cf8244a2\workspace\transformed\jetified-navigation-common-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\5f5019cf14759148490cbc437b1a00fa\workspace\transformed\jetified-navigation-compose-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\5f5019cf14759148490cbc437b1a00fa\workspace\transformed\jetified-navigation-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\d16d00093a55161f0f89e8a0d800b98c\workspace\transformed\jetified-navigation-runtime-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\d16d00093a55161f0f89e8a0d800b98c\workspace\transformed\jetified-navigation-runtime-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\3ebe094769019c988a36e015e46b8d12\workspace\transformed\work-runtime-2.10.3\proguard.txt
# Keep ListenableWorker / Worker if not removed during shrinking
-keepnames class * extends androidx.work.ListenableWorker
# Keep all constructors on ListenableWorker, Worker if class is kept
-keepclassmembers public class * extends androidx.work.ListenableWorker {
    public <init>(...);
}

# We need to keep WorkerParameters for the ListenableWorker constructor that is used by the
# default instantiation strategy in WorkerFactory.
-keep class androidx.work.WorkerParameters

# Keep InputMerger if not removed during shrinking
-keepnames class * extends androidx.work.InputMerger
# Keep constructor on InputMerger if class is kept
-keepclassmembers class * extends androidx.work.InputMerger { void <init>(); }

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\3ebe094769019c988a36e015e46b8d12\workspace\transformed\work-runtime-2.10.3\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\dfe4f29c3ce72f34963a5b49364fdbc8\workspace\transformed\appcompat-1.7.1\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\dfe4f29c3ce72f34963a5b49364fdbc8\workspace\transformed\appcompat-1.7.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\a8e07d7b1c78d1f3393865ee49ec706c\workspace\transformed\jetified-lifecycle-livedata-core-ktx-2.9.3\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\a8e07d7b1c78d1f3393865ee49ec706c\workspace\transformed\jetified-lifecycle-livedata-core-ktx-2.9.3\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\4cece7687b5db6538a919745e143b8a2\workspace\transformed\shrink-rules\lib\META-INF\proguard\androidx-lifecycle-lifecycle-common-java8.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\4cece7687b5db6538a919745e143b8a2\workspace\transformed\shrink-rules\lib\META-INF\proguard\androidx-lifecycle-lifecycle-common-java8.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\bbbad09b9c315b66aaed20e554b50fab\workspace\transformed\jetified-runtime-annotation\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\bbbad09b9c315b66aaed20e554b50fab\workspace\transformed\jetified-runtime-annotation\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\f2166b0b8631e8cfea21fcb6bf06c2c1\workspace\transformed\jetified-ui-tooling-preview\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\f2166b0b8631e8cfea21fcb6bf06c2c1\workspace\transformed\jetified-ui-tooling-preview\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\496df41bc99c12626d9939b0365e3fd0\workspace\transformed\jetified-ui-util\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\496df41bc99c12626d9939b0365e3fd0\workspace\transformed\jetified-ui-util\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\de0f511100dbd41c7be424ff97bef9c0\workspace\transformed\jetified-ui-unit\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\de0f511100dbd41c7be424ff97bef9c0\workspace\transformed\jetified-ui-unit\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\ad847e51106e184ac44a94b7c44d1160\workspace\transformed\jetified-ui-text\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\ad847e51106e184ac44a94b7c44d1160\workspace\transformed\jetified-ui-text\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\cf6fe0cbf6ad66ceeefdc151c2d4a4e5\workspace\transformed\jetified-ui-graphics-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}
-keepclassmembers class androidx.compose.ui.graphics.layer.view.ViewLayerContainer {
    protected void dispatchGetDisplayList();
}
-keepclassmembers class androidx.compose.ui.graphics.layer.view.PlaceholderHardwareCanvas {
    public int drawRenderNode(...);
    public boolean isHardwareAccelerated();
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\cf6fe0cbf6ad66ceeefdc151c2d4a4e5\workspace\transformed\jetified-ui-graphics-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\5a845aad8a0fdff075dad85299fa918f\workspace\transformed\jetified-ui-geometry\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\5a845aad8a0fdff075dad85299fa918f\workspace\transformed\jetified-ui-geometry\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\8964265269fb0f8fe9675db2e4298d67\workspace\transformed\jetified-firebase-auth-24.0.1\proguard.txt
-dontwarn com.google.appengine.api.**
-dontwarn okio.**
-dontwarn org.apache.**
-dontwarn retrofit.android.**
-dontwarn retrofit.appengine.**
-dontwarn retrofit.client.**
-dontwarn rx.**

# This is necessary for keeping SecureTokenHttpApi and IdentityToolkitHttpApi
# Otherwise those classes get stripped out, as they are only being used
# reflectively.

-keepclasseswithmembernames interface * {
    @retrofit.http.* <methods>;
}

# This is necessary for parsing JSON responses, since the JSON converter uses reflection to figure out the class/type of response.
# We mainly need the *Response.classes to not be stripped out. All the firebase-auth classes are proguarded into "com.google.android.gms.internal.firebase-auth-api*".

-keep class com.google.android.gms.internal.** { *; }

# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.firebase-auth-api.zzalf {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\8964265269fb0f8fe9675db2e4298d67\workspace\transformed\jetified-firebase-auth-24.0.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\45e48d5c52928a2ba9ad0dbf3ea5af0e\workspace\transformed\jetified-firebase-firestore-26.0.0\proguard.txt
# Needed for DNS resolution.  Present in OpenJDK, but not Android
-dontwarn javax.naming.**

# Don't warn about checkerframework
#
# Guava uses the checkerframework and the annotations
# can safely be ignored at runtime.
-dontwarn org.checkerframework.**

# Guava warnings:
-dontwarn java.lang.ClassValue
-dontwarn com.google.j2objc.annotations.Weak
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
-dontwarn javax.lang.model.element.Modifier

# Okhttp warnings.
-dontwarn okio.**
-dontwarn com.google.j2objc.annotations.**

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\45e48d5c52928a2ba9ad0dbf3ea5af0e\workspace\transformed\jetified-firebase-firestore-26.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\08ce670c050683b28ac5192e79986815\workspace\transformed\jetified-play-services-measurement-api-23.0.0\proguard.txt
# Can be removed once we pull in a dependency on firebase-common that includes
# https://github.com/firebase/firebase-android-sdk/pull/1472/commits/856f1ca1151cdd88679bbc778892f23dfa34fc06#diff-a2ed34b5a38b4c6c686b09e54865eb48
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.measurement.zzmf {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\08ce670c050683b28ac5192e79986815\workspace\transformed\jetified-play-services-measurement-api-23.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\f61dd22d72dfa4b5a336ba7cbd5d846f\workspace\transformed\jetified-firebase-auth-interop-20.0.0\proguard.txt
# Can be removed once we pull in a dependency on firebase-common that includes
# https://github.com/firebase/firebase-android-sdk/pull/1472/commits/856f1ca1151cdd88679bbc778892f23dfa34fc06#diff-a2ed34b5a38b4c6c686b09e54865eb48
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\f61dd22d72dfa4b5a336ba7cbd5d846f\workspace\transformed\jetified-firebase-auth-interop-20.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\9d0862f94fd38ad097add089d8c28386\workspace\transformed\jetified-firebase-common-22.0.0\proguard.txt
-dontwarn com.google.firebase.platforminfo.KotlinDetector
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\9d0862f94fd38ad097add089d8c28386\workspace\transformed\jetified-firebase-common-22.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\47766bccec0e7c7fa999d20cc280419d\workspace\transformed\jetified-play-services-measurement-23.0.0\proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.measurement.zzmf {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\47766bccec0e7c7fa999d20cc280419d\workspace\transformed\jetified-play-services-measurement-23.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\3187bbf7f08dca16e763485033c0dbd2\workspace\transformed\jetified-play-services-measurement-sdk-23.0.0\proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.measurement.zzmf {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\3187bbf7f08dca16e763485033c0dbd2\workspace\transformed\jetified-play-services-measurement-sdk-23.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\edb36d7dba71274648e4781cad5afdcb\workspace\transformed\room-runtime-2.6.1\proguard.txt
-keep class * extends androidx.room.RoomDatabase
-dontwarn androidx.room.paging.**
-dontwarn androidx.lifecycle.LiveData

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\edb36d7dba71274648e4781cad5afdcb\workspace\transformed\room-runtime-2.6.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\19f09eb56c6e039b10f957d0fb1e4f1f\workspace\transformed\jetified-recaptcha-18.6.1\proguard.txt
# Proguard cannot process META-INF/versions/9.
# See https://discuss.gradle.org/t/meta-inf-version-duplicate-error-when-using-proguard/31380
-dontwarn module-info

# Ignore the warning becuse ClassValueCtorCache is never used on Android.
-dontwarn kotlinx.coroutines.internal.ClassValueCtorCache

# Ignore warning due to the usage from Guava and kotlinx.coroutines.internal.ClassValueCtorCache
-dontwarn java.lang.ClassValue

# Ignore warning to accommodate the missing injar of kotlinx.coroutines.flow for
# androidx.slidingpanelayout.widget.
-dontwarn kotlinx.coroutines.flow.**

# This prevents the SDK to be obfuscated again when building the android app.
-keep class com.google.android.recaptcha.** { *; }

# This is required for recaptcha mobile to function properly.
# See: https://cloud.google.com/recaptcha-enterprise/docs/instrument-android-apps
-keep class com.google.android.play.core.integrity.** { *; }
-keep class com.google.android.gms.tasks.** {*;}

# To keep okhttp3 generated files which are used in our NetworkModule which is
# used widely across the app.
-dontwarn com.squareup.okhttp3.**
-dontwarn okhttp3.**
-keep class com.squareup.okhttp3.* { *;}
-keep class okhttp3.**
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.recaptcha.internal.zznd {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\19f09eb56c6e039b10f957d0fb1e4f1f\workspace\transformed\jetified-recaptcha-18.6.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\80cdf409899a3ca2dd81441c07fbd640\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\80cdf409899a3ca2dd81441c07fbd640\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\da40e3f8b5d64ed280bb1cc611b2465f\workspace\transformed\jetified-credentials-play-services-auth-1.2.0-rc01\proguard.txt
-if class androidx.credentials.CredentialManager
-keep class androidx.credentials.playservices.** {
  *;
}
# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\da40e3f8b5d64ed280bb1cc611b2465f\workspace\transformed\jetified-credentials-play-services-auth-1.2.0-rc01\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e84014de34774b562436e5143f193944\workspace\transformed\jetified-play-services-measurement-impl-23.0.0\proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.measurement.zzmf {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e84014de34774b562436e5143f193944\workspace\transformed\jetified-play-services-measurement-impl-23.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\99819ced86fd37fcc2e5e6cdc51febec\workspace\transformed\jetified-datastore-preferences-core-release\proguard.txt
-keepclassmembers class * extends androidx.datastore.preferences.protobuf.GeneratedMessageLite {
    <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\99819ced86fd37fcc2e5e6cdc51febec\workspace\transformed\jetified-datastore-preferences-core-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e5ae89f19ab90c1470a8985ee5bfb977\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e5ae89f19ab90c1470a8985ee5bfb977\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\coroutines.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\361a6f88a816819629c32ca3f4f029a0\workspace\transformed\jetified-play-services-fido-20.1.0\proguard.txt
# Methods enable and disable in this class are complained as unresolved
# references, but they are system APIs and are not used by Fido client apps.
-dontwarn android.nfc.NfcAdapter

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\361a6f88a816819629c32ca3f4f029a0\workspace\transformed\jetified-play-services-fido-20.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\ae5cfb03c8561e55d97bb456a7916517\workspace\transformed\jetified-play-services-auth-base-18.0.4\proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.auth.zzeu {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\ae5cfb03c8561e55d97bb456a7916517\workspace\transformed\jetified-play-services-auth-base-18.0.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\ed759c74269ba928a312aa8fcf938723\workspace\transformed\jetified-play-services-base-18.5.0\proguard.txt
# b/35135904 Ensure that proguard will not strip the mResultGuardian.
-keepclassmembers class com.google.android.gms.common.api.internal.BasePendingResult {
  com.google.android.gms.common.api.internal.BasePendingResult$ReleasableResultGuardian mResultGuardian;
}



# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\ed759c74269ba928a312aa8fcf938723\workspace\transformed\jetified-play-services-base-18.5.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e2ab7a6036ebfca74542b571b75af16d\workspace\transformed\jetified-play-services-tasks-18.2.0\proguard.txt


# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e2ab7a6036ebfca74542b571b75af16d\workspace\transformed\jetified-play-services-tasks-18.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\231a2c152c53950307c761363f9f3e06\workspace\transformed\jetified-play-services-measurement-sdk-api-23.0.0\proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.measurement.zzmf {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\231a2c152c53950307c761363f9f3e06\workspace\transformed\jetified-play-services-measurement-sdk-api-23.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\55449308f41efc419dfabad5b27bb960\workspace\transformed\jetified-play-services-measurement-base-23.0.0\proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.measurement.zzmf {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\55449308f41efc419dfabad5b27bb960\workspace\transformed\jetified-play-services-measurement-base-23.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\a9dcac2746b533dd703cdd4163f9c124\workspace\transformed\jetified-play-services-basement-18.5.0\proguard.txt
# Needed when building against pre-Marshmallow SDK.
-dontwarn android.security.NetworkSecurityPolicy

# Needed when building against Marshmallow SDK.
-dontwarn android.app.Notification

# Protobuf has references not on the Android boot classpath
-dontwarn sun.misc.Unsafe
-dontwarn libcore.io.Memory

# Annotations used during internal SDK shrinking.
-dontwarn com.google.android.apps.common.proguard.UsedBy*
-dontwarn com.google.android.apps.common.proguard.SideEffectFree

# Annotations referenced by the SDK but whose definitions are contained in
# non-required dependencies.
-dontwarn javax.annotation.**
-dontwarn org.checkerframework.**
-dontwarn com.google.errorprone.annotations.**
-dontwarn org.jspecify.annotations.NullMarked

# Annotations no longer exist. Suppression prevents ProGuard failures in
# SDKs which depend on earlier versions of play-services-basement.
-dontwarn com.google.android.gms.common.util.VisibleForTesting

# Proguard flags for consumers of the Google Play services SDK
# https://developers.google.com/android/guides/setup#add_google_play_services_to_your_project

# Keep SafeParcelable NULL value, needed for reflection by DowngradeableSafeParcel
-keepclassmembers public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
    public static final *** NULL;
}

# Needed for Parcelable/SafeParcelable classes & their creators to not get renamed, as they are
# found via reflection.
-keep class com.google.android.gms.common.internal.ReflectedParcelable
-keepnames class * implements com.google.android.gms.common.internal.ReflectedParcelable
-keepclassmembers class * implements android.os.Parcelable {
  public static final *** CREATOR;
}

# Keep the classes/members we need for client functionality.
-keep @interface android.support.annotation.Keep
-keep @androidx.annotation.Keep class *
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <fields>;
}
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <methods>;
}

# Keep androidX equivalent of above android.support to allow Jetification.
-keep @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class *
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <fields>;
}
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <methods>;
}

# Keep the names of classes/members we need for client functionality.
-keep @interface com.google.android.gms.common.annotation.KeepName
-keepnames @com.google.android.gms.common.annotation.KeepName class *
-keepclassmembernames class * {
  @com.google.android.gms.common.annotation.KeepName *;
}

# Keep Dynamite API entry points
-keep @interface com.google.android.gms.common.util.DynamiteApi
-keep @com.google.android.gms.common.util.DynamiteApi public class * {
  public <fields>;
  public <methods>;
}



# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\a9dcac2746b533dd703cdd4163f9c124\workspace\transformed\jetified-play-services-basement-18.5.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e0f9a1d3ad7faec418bd2adb39ea2ab8\workspace\transformed\fragment-1.5.4\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e0f9a1d3ad7faec418bd2adb39ea2ab8\workspace\transformed\fragment-1.5.4\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\fa74663f5051de2cb6c28d6e4512e7b8\workspace\transformed\jetified-savedstate-ktx-1.3.1\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\fa74663f5051de2cb6c28d6e4512e7b8\workspace\transformed\jetified-savedstate-ktx-1.3.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\028a3ef7e5b4b4330869349592e9871d\workspace\transformed\jetified-savedstate-release\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\028a3ef7e5b4b4330869349592e9871d\workspace\transformed\jetified-savedstate-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\60288f88909dc67a1e796fe25d5016f0\workspace\transformed\jetified-savedstate-compose-release\proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.savedstate.compose.LocalSavedStateRegistryOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalSavedStateRegistryOwner` to ensure backward compatibility
# when using SavedState >= 1.3 with Compose <= 1.7.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalSavedStateRegistryOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalSavedStateRegistryOwner();
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\60288f88909dc67a1e796fe25d5016f0\workspace\transformed\jetified-savedstate-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\723acdfa424dac6f11e632b8aff3d87c\workspace\transformed\jetified-runtime\proguard.txt
-assumenosideeffects public class androidx.compose.runtime.ComposerKt {
    void sourceInformation(androidx.compose.runtime.Composer,java.lang.String);
    void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String);
    void sourceInformationMarkerEnd(androidx.compose.runtime.Composer);
}

# Composer's class initializer doesn't do anything but create an EMPTY object. Marking the
# initializers as having no side effects can help encourage shrinkers to merge/devirtualize Composer
# with ComposerImpl.
-assumenosideeffects public class androidx.compose.runtime.Composer {
    void <clinit>();
}
-assumenosideeffects public class androidx.compose.runtime.ComposerImpl {
    void <clinit>();
}

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.runtime.** {
    # java.lang.Void == methods that return Nothing
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);

    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);

    static void compose*RuntimeError(...);
    static java.lang.Void compose*RuntimeError(...);
}


# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\723acdfa424dac6f11e632b8aff3d87c\workspace\transformed\jetified-runtime\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\89fede2021b861d74a330baf0666904e\workspace\transformed\jetified-runtime-saveable\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\89fede2021b861d74a330baf0666904e\workspace\transformed\jetified-runtime-saveable\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e0a45c6e8073b5526cfe5993edab7318\workspace\transformed\jetified-lifecycle-runtime-compose-release\proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.lifecycle.compose.LocalLifecycleOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalLifecycleOwner` to ensure backward compatibility
# when using Lifecycle 2.8+ with Compose 1.6.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e0a45c6e8073b5526cfe5993edab7318\workspace\transformed\jetified-lifecycle-runtime-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\410bf0b9fec784df387375448da628bf\workspace\transformed\jetified-lifecycle-viewmodel-savedstate-release\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\410bf0b9fec784df387375448da628bf\workspace\transformed\jetified-lifecycle-viewmodel-savedstate-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\480609ced0e6eeca7fec571a41e59e3f\workspace\transformed\jetified-lifecycle-runtime-release\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# The deprecated `android.app.Fragment` creates `Fragment` instances using reflection.
# See: b/338958225, b/341537875
-keepclasseswithmembers,allowobfuscation public class androidx.lifecycle.ReportFragment {
    public <init>();
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\480609ced0e6eeca7fec571a41e59e3f\workspace\transformed\jetified-lifecycle-runtime-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\7f2fb84d2edab089f09cbe3da20448d7\workspace\transformed\jetified-lifecycle-viewmodel-release\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\7f2fb84d2edab089f09cbe3da20448d7\workspace\transformed\jetified-lifecycle-viewmodel-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e480f350d953a45ee7e2e6e79801c666\workspace\transformed\jetified-lifecycle-process-2.9.3\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\e480f350d953a45ee7e2e6e79801c666\workspace\transformed\jetified-lifecycle-process-2.9.3\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\00cdadcde6d7e00a3f8c4d8242573abb\workspace\transformed\jetified-lifecycle-service-2.9.3\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\00cdadcde6d7e00a3f8c4d8242573abb\workspace\transformed\jetified-lifecycle-service-2.9.3\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\acb990f91e82cc273bcce16959973c3a\workspace\transformed\lifecycle-livedata-2.9.3\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\acb990f91e82cc273bcce16959973c3a\workspace\transformed\lifecycle-livedata-2.9.3\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\ad2c7bc22aa5c2c0dddd0e6ad2dbd4cf\workspace\transformed\lifecycle-livedata-core-2.9.3\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\ad2c7bc22aa5c2c0dddd0e6ad2dbd4cf\workspace\transformed\lifecycle-livedata-core-2.9.3\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\94597ce0c99e0a511ba9f39b1d3adf85\workspace\transformed\jetified-lifecycle-viewmodel-ktx-2.9.3\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\94597ce0c99e0a511ba9f39b1d3adf85\workspace\transformed\jetified-lifecycle-viewmodel-ktx-2.9.3\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\b9a3297deb643f97717017ca1e81f843\workspace\transformed\jetified-lifecycle-viewmodel-compose-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\b9a3297deb643f97717017ca1e81f843\workspace\transformed\jetified-lifecycle-viewmodel-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\6d04078e18871f3c516685b3c177fd39\workspace\transformed\jetified-ui-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# We supply these as stubs and are able to link to them at runtime
# because they are hidden public classes in Android. We don't want
# R8 to complain about them not being there during optimization.
-dontwarn android.view.RenderNode
-dontwarn android.view.DisplayListCanvas
-dontwarn android.view.HardwareCanvas

-keepclassmembers class androidx.compose.ui.platform.ViewLayerContainer {
    protected void dispatchGetDisplayList();
}

-keepclassmembers class androidx.compose.ui.platform.AndroidComposeView {
    android.view.View findViewByAccessibilityIdTraversal(int);
}

# Users can create Modifier.Node instances that implement multiple Modifier.Node interfaces,
# so we cannot tell whether two modifier.node instances are of the same type without using
# reflection to determine the class type. See b/265188224 for more context.
-keep,allowshrinking class * extends androidx.compose.ui.node.ModifierNodeElement

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);
}

# When pointer input modifier nodes are added dynamically and have the same keys (common when
# developers `Unit` for their keys), we need a way to differentiate them and using a
# functional interface and comparing classes allows us to do that.
-keepnames class androidx.compose.ui.input.pointer.PointerInputEventHandler {
    *;
}


# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\6d04078e18871f3c516685b3c177fd39\workspace\transformed\jetified-ui-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\396103fcc37923e57fe67c39c431f98b\workspace\transformed\vectordrawable-animated-1.1.0\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\396103fcc37923e57fe67c39c431f98b\workspace\transformed\vectordrawable-animated-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\3ac808c899021dd98b4e971f842f1a0a\workspace\transformed\jetified-graphics-path-1.0.1\proguard.txt
-keepclasseswithmembers class androidx.graphics.path.** {
    native <methods>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\3ac808c899021dd98b4e971f842f1a0a\workspace\transformed\jetified-graphics-path-1.0.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\2578b36532e2ce88749f7590e492a76d\workspace\transformed\core-1.15.0\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\2578b36532e2ce88749f7590e492a76d\workspace\transformed\core-1.15.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\5f6ae4ff23f6753668b0356432793f53\workspace\transformed\jetified-timber-5.0.1\proguard.txt
-dontwarn org.jetbrains.annotations.**

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\5f6ae4ff23f6753668b0356432793f53\workspace\transformed\jetified-timber-5.0.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\49245bba1cea6e612a62c7ee5224434c\workspace\transformed\shrink-rules\lib\META-INF\proguard\retrofit2.pro
# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod

# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations

# Keep annotation default values (e.g., retrofit2.http.Field.encoded).
-keepattributes AnnotationDefault

# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
    @retrofit2.http.* <methods>;
}

# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**

# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit

# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*

# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>

# Keep inherited services.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface * extends <1>

# With R8 full mode generic signatures are stripped for classes that are not
# kept. Suspend functions are wrapped in continuations where the type argument
# is used.
-keep,allowobfuscation,allowshrinking class kotlin.coroutines.Continuation

# R8 full mode strips generic signatures from return types if not kept.
-if interface * { @retrofit2.http.* public *** *(...); }
-keep,allowoptimization,allowshrinking,allowobfuscation class <3>

# With R8 full mode generic signatures are stripped for classes that are not kept.
-keep,allowobfuscation,allowshrinking class retrofit2.Response

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\49245bba1cea6e612a62c7ee5224434c\workspace\transformed\shrink-rules\lib\META-INF\proguard\retrofit2.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\fea0debeab3e5324dc21da466c934057\workspace\transformed\jetified-okhttp-release\proguard.txt
# JSR 305 annotations are for embedding nullability information.
-dontwarn javax.annotation.**

# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# OkHttp platform used only on JVM and when Conscrypt and other security providers are available.
# May be used with robolectric or deliberate use of Bouncy Castle on Android
-dontwarn okhttp3.internal.platform.**
-dontwarn org.conscrypt.**
-dontwarn org.bouncycastle.**
-dontwarn org.openjsse.**

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\fea0debeab3e5324dc21da466c934057\workspace\transformed\jetified-okhttp-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\4fa507c33773e4deb8bc7aebf7836a57\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\kotlin-reflect.pro
# When editing this file, update the following files as well:
# - META-INF/com.android.tools/proguard/kotlin-reflect.pro
# - META-INF/com.android.tools/r8-upto-1.6.0/kotlin-reflect.pro
# - META-INF/proguard/kotlin-reflect.pro
# Keep Metadata annotations so they can be parsed at runtime.
-keep class kotlin.Metadata { *; }

# Keep generic signatures and annotations at runtime.
# R8 requires InnerClasses and EnclosingMethod if you keepattributes Signature.
-keepattributes InnerClasses,Signature,RuntimeVisible*Annotations,EnclosingMethod

# Don't note on API calls from different JVM versions as they're gated properly at runtime.
-dontnote kotlin.internal.PlatformImplementationsKt

# Don't note on internal APIs, as there is some class relocating that shrinkers may unnecessarily find suspicious.
-dontwarn kotlin.reflect.jvm.internal.**

# Statically guarded by try-catch block and not used on Android, see CacheByClass
-dontwarn java.lang.ClassValue

# Do not even execute try-catch block for ClassValue
-assumenosideeffects class kotlin.reflect.jvm.internal.CacheByClassKt {
    boolean useClassValue return false;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\4fa507c33773e4deb8bc7aebf7836a57\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8-from-1.6.0\kotlin-reflect.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\cc59589e9b09708448edf0f483a265ca\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\kotlinx-serialization-common.pro
# Keep `Companion` object fields of serializable classes.
# This avoids serializer lookup through `getDeclaredClasses` as done for named companion objects.
-if @kotlinx.serialization.Serializable class **
-keepclassmembers class <1> {
    static <1>$Companion Companion;
}

# Keep `serializer()` on companion objects (both default and named) of serializable classes.
-if @kotlinx.serialization.Serializable class ** {
    static **$* *;
}
-keepclassmembers class <2>$<3> {
    kotlinx.serialization.KSerializer serializer(...);
}

# Keep `INSTANCE.serializer()` of serializable objects.
-if @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
}
-keepclassmembers class <1> {
    public static <1> INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# @Serializable and @Polymorphic are used at runtime for polymorphic serialization.
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

# Don't print notes about potential mistakes or omissions in the configuration for kotlinx-serialization classes
# See also https://github.com/Kotlin/kotlinx.serialization/issues/1900
-dontnote kotlinx.serialization.**

# Serialization core uses `java.lang.ClassValue` for caching inside these specified classes.
# If there is no `java.lang.ClassValue` (for example, in Android), then R8/ProGuard will print a warning.
# However, since in this case they will not be used, we can disable these warnings
-dontwarn kotlinx.serialization.internal.ClassValueReferences

# disable optimisation for descriptor field because in some versions of ProGuard, optimization generates incorrect bytecode that causes a verification error
# see https://github.com/Kotlin/kotlinx.serialization/issues/2719
-keepclassmembers public class **$$serializer {
    private ** descriptor;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\cc59589e9b09708448edf0f483a265ca\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\kotlinx-serialization-common.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\cc59589e9b09708448edf0f483a265ca\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\kotlinx-serialization-r8.pro
# Rule to save runtime annotations on serializable class.
# If the R8 full mode is used, annotations are removed from classes-files.
#
# For the annotation serializer, it is necessary to read the `Serializable` annotation inside the serializer<T>() function - if it is present,
# then `SealedClassSerializer` is used, if absent, then `PolymorphicSerializer'.
#
# When using R8 full mode, all interfaces will be serialized using `PolymorphicSerializer`.
#
# see https://github.com/Kotlin/kotlinx.serialization/issues/2050

 -if @kotlinx.serialization.Serializable class **
 -keep, allowshrinking, allowoptimization, allowobfuscation, allowaccessmodification class <1>

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\cc59589e9b09708448edf0f483a265ca\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\kotlinx-serialization-r8.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\62db9ad4ec095e7314842d0201f9a97a\workspace\transformed\jetified-startup-runtime-1.2.0\proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\62db9ad4ec095e7314842d0201f9a97a\workspace\transformed\jetified-startup-runtime-1.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\b79a7489c509dd4c10c9b558cde75b71\workspace\transformed\jetified-core-viewtree-1.0.0\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\b79a7489c509dd4c10c9b558cde75b71\workspace\transformed\jetified-core-viewtree-1.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\85b3f95e1898aacb335b636f047a8f1c\workspace\transformed\versionedparcelable-1.1.1\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\85b3f95e1898aacb335b636f047a8f1c\workspace\transformed\versionedparcelable-1.1.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\f0b0d73abb19e79889db87f6315e13f8\workspace\transformed\jetified-firebase-components-19.0.0\proguard.txt
-dontwarn com.google.firebase.components.Component$Instantiation
-dontwarn com.google.firebase.components.Component$ComponentType

-keep class * implements com.google.firebase.components.ComponentRegistrar { void <init>(); }
-keep,allowshrinking interface com.google.firebase.components.ComponentRegistrar

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\f0b0d73abb19e79889db87f6315e13f8\workspace\transformed\jetified-firebase-components-19.0.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\61627364d3854cb1bf5f32b390336334\workspace\transformed\jetified-transport-backend-cct-3.3.0\proguard.txt
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\61627364d3854cb1bf5f32b390336334\workspace\transformed\jetified-transport-backend-cct-3.3.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\d283ffeb9f306d8b0522f89ae54600ea\workspace\transformed\jetified-transport-api-3.2.0\proguard.txt
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\d283ffeb9f306d8b0522f89ae54600ea\workspace\transformed\jetified-transport-api-3.2.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\7014e95726db2704325be2e0a2e1a8ce\workspace\transformed\shrink-rules\lib\META-INF\proguard\androidx-collection-collection-ktx.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\7014e95726db2704325be2e0a2e1a8ce\workspace\transformed\shrink-rules\lib\META-INF\proguard\androidx-collection-collection-ktx.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\82df2821a834995af77770aa38572d10\workspace\transformed\shrink-rules\lib\META-INF\proguard\androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\82df2821a834995af77770aa38572d10\workspace\transformed\shrink-rules\lib\META-INF\proguard\androidx-annotations.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\cf8eae9a198694a8512f91153276a71b\workspace\transformed\jetified-googleid-1.1.0\proguard.txt
# Proguard cannot process META-INF/versions/9.
# See https://discuss.gradle.org/t/meta-inf-version-duplicate-error-when-using-proguard/31380
-dontwarn module-info

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\cf8eae9a198694a8512f91153276a71b\workspace\transformed\jetified-googleid-1.1.0\proguard.txt
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\7fe3ce9e0e03c20dae3d9440992f7ff0\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\r8.pro
-identifiernamestring @dagger.internal.IdentifierNameString class ** {
    static java.lang.String *;
}
# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\7fe3ce9e0e03c20dae3d9440992f7ff0\workspace\transformed\shrink-rules\lib\META-INF\com.android.tools\r8\r8.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\5546bf4998b37b9be09f70a39da1a1d8\workspace\transformed\shrink-rules\lib\META-INF\proguard\gson.pro
### Gson ProGuard and R8 rules which are relevant for all users
### This file is automatically recognized by ProGuard and R8, see https://developer.android.com/build/shrink-code#configuration-files
###
### IMPORTANT:
### - These rules are additive; don't include anything here which is not specific to Gson (such as completely
###   disabling obfuscation for all classes); the user would be unable to disable that then
### - These rules are not complete; users will most likely have to add additional rules for their specific
###   classes, for example to disable obfuscation for certain fields or to keep no-args constructors
###

# Keep generic signatures; needed for correct type resolution
-keepattributes Signature

# Keep Gson annotations
# Note: Cannot perform finer selection here to only cover Gson annotations, see also https://stackoverflow.com/q/47515093
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

### The following rules are needed for R8 in "full mode" which only adheres to `-keepattribtues` if
### the corresponding class or field is matches by a `-keep` rule as well, see
### https://r8.googlesource.com/r8/+/refs/heads/main/compatibility-faq.md#r8-full-mode

# Keep class TypeToken (respectively its generic signature) if present
-if class com.google.gson.reflect.TypeToken
-keep,allowobfuscation class com.google.gson.reflect.TypeToken

# Keep any (anonymous) classes extending TypeToken
-keep,allowobfuscation class * extends com.google.gson.reflect.TypeToken

# Keep classes with @JsonAdapter annotation
-keep,allowobfuscation,allowoptimization @com.google.gson.annotations.JsonAdapter class *

# Keep fields with any other Gson annotation
# Also allow obfuscation, assuming that users will additionally use @SerializedName or
# other means to preserve the field names
-keepclassmembers,allowobfuscation class * {
  @com.google.gson.annotations.Expose <fields>;
  @com.google.gson.annotations.JsonAdapter <fields>;
  @com.google.gson.annotations.Since <fields>;
  @com.google.gson.annotations.Until <fields>;
}

# Keep no-args constructor of classes which can be used with @JsonAdapter
# By default their no-args constructor is invoked to create an adapter instance
-keepclassmembers class * extends com.google.gson.TypeAdapter {
  <init>();
}
-keepclassmembers class * implements com.google.gson.TypeAdapterFactory {
  <init>();
}
-keepclassmembers class * implements com.google.gson.JsonSerializer {
  <init>();
}
-keepclassmembers class * implements com.google.gson.JsonDeserializer {
  <init>();
}

# Keep fields annotated with @SerializedName for classes which are referenced.
# If classes with fields annotated with @SerializedName have a no-args
# constructor keep that as well. Based on
# https://issuetracker.google.com/issues/150189783#comment11.
# See also https://github.com/google/gson/pull/2420#discussion_r1241813541
# for a more detailed explanation.
-if class *
-keepclasseswithmembers,allowobfuscation class <1> {
  @com.google.gson.annotations.SerializedName <fields>;
}
-if class * {
  @com.google.gson.annotations.SerializedName <fields>;
}
-keepclassmembers,allowobfuscation,allowoptimization class <1> {
  <init>();
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\5546bf4998b37b9be09f70a39da1a1d8\workspace\transformed\shrink-rules\lib\META-INF\proguard\gson.pro
# The proguard configuration file for the following section is C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\1b559055aaeecc582d161b5966053712\workspace\transformed\jetified-protolite-well-known-types-18.0.1\proguard.txt
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# protobuf-javalite has a bug that requires this workaround rule
# https://github.com/protocolbuffers/protobuf/issues/6463#issuecomment-553183215
-keepclassmembers class * extends com.google.protobuf.GeneratedMessageLite {
  <fields>;
}

# End of content from C:\Users\Wehtt\.gradle\caches\9.1.0-rc-1\transforms\1b559055aaeecc582d161b5966053712\workspace\transformed\jetified-protolite-well-known-types-18.0.1\proguard.txt
# The proguard configuration file for the following section is <unknown>
-keep class **.R
-keep class **.R$* {*;}
# End of content from <unknown>